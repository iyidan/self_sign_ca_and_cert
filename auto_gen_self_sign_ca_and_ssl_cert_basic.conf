#!/bin/bash

# 认证信息
# Country Name [C]: 国家 2字符，如中国是CN
# State or Province Name (full name) [ST]: 所在省/地区 如Beijing
# Locality Name (eg, city) [L]: 所在地/城市名称 如Beijing
# Organization Name [O]: 组织名称 
# Organizational Unit Name [OU]: 组织单位名称
# Common Name (e.g. server FQDN(正式域名) or YOUR name) [CN]: 域名或名称
# Email Address [emailAddress]: email地址

# ca 主题参数
CA_SUBJ="/C=CN/ST=todo/L=todo/O=todo/OU=todo/CN=todo/emailAddress=todo"
# 服务器主题参数 注意CN不能和上面主题一样
SERVER_SUBJ="/C=CN/ST=todo/L=todo/O=todo/OU=todo/CN=todo2/emailAddress=todo"

shamethod="sha256"

gen_ca() {
    # 生成ca私钥
    openssl genrsa -out ca-key.pem 2048 "-$shamethod"
    # 生成csr签名请求
    openssl req -new -key ca-key.pem -out ca-req.csr -subj "$CA_SUBJ" "-$shamethod"
    # 自签名CA证书（chrome已经不认sha1）
    openssl ca -md $shamethod -selfsign -keyfile ca-key.pem -days 3650 -in ca-req.csr -out ca-cert.pem -outdir ./ -extensions v3_ca -config $SCRIPTPATH/openssl.cnf -notext
}

gen_server_keys() {
    # 生成服务器私钥
    openssl genrsa -out server-key.pem 2048 "-$shamethod"
    # 生成csr签名请求
    openssl req -new -out server-req.csr -key server-key.pem -subj "$SERVER_SUBJ" -config $SCRIPTPATH/openssl.cnf "-$shamethod"
    # 使用ca签名
    openssl ca -md $shamethod -keyfile ca-key.pem -cert ca-cert.pem -in server-req.csr -out server-cert.pem -outdir ./ -config $SCRIPTPATH/openssl.cnf -extensions v3_req -days 3650 -notext
}

verify_key() {
    openssl verify -CAfile ca-cert.pem  server-cert.pem
}

